<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QC+RXhpZgAATU0AKgAAAAgABgESAAMAAAABAAEAAAEaAAUAAAAB
        AAAAVgEbAAUAAAABAAAAXgEoAAMAAAABAAIAAAITAAMAAAABAAEAAIdpAAQAAAABAAAAZgAAAAAAARlJ
        AAAD6AABGUkAAAPoAAaQAAAHAAAABDAyMTCRAQAHAAAABAECAwCgAAAHAAAABDAxMDCgAQADAAAAAf//
        AACgAgAEAAAAAQAAAMigAwAEAAAAAQAAAMgAAAAAAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoH
        BwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsN
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wgARCADIAMgD
        AREAAhEBAxEB/8QAHAABAAIDAQEBAAAAAAAAAAAAAAYHAwQFCAEC/8QAFwEBAQEBAAAAAAAAAAAAAAAA
        AAECA//aAAwDAQACEAMQAAAB9UgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAj8VhmSirH1QAAAAAAA
        AKlzI1Hcq49X4UPiSyrN1RFjjnRMZiOgaR2DsmUAA1TzHzk4q7t0AYTx1znrLd7NV0aZhJ8RQihNjTPh
        YwAB5zxIrGwbJ2K+HHjXMZLK9Dbo+H0AAAAAHkrnIpEfkE11daInIJBbN69U9LUZsElMJCCaEeNo7x+C
        aAAozErmBXGZ6E3dMofEsbV/RaOlz6sSIob5lOMd0wnMJcRUtUAGAo7Ej5IS7t38xR+ZwiSF4buQAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/xAAlEAACAgICAgEEAwAAAAAAAAAEBQMGAQIABxAgFxEU
        FXATMED/2gAIAQEAAQUC/dDxgQsBltdkHxXrwG9k/wAdh7BFVbDH3NnqHa2q4rx2DWsaaUm0/nQ/Ddtu
        KUY2OQEG2DIjaGzamwqLR+X1Vv4mI2LLttE7cwIFsUus0fqSVEHBaL5M3zTKNgLHpLFrPEfCRTbIoaQu
        V/LAKQK5eS62wRoNsVdwghka+g42iqoayZvWI7PH9u1hncvKVtKID6vuwf5SMXwuPPyQ55H2a105H2oR
        jkvahGeSdmNt+fJDnkl/NIzW75j73+/sJfGBYpUs8KXxT1Ebp7aVeid74hSzzpet18Zj3l8yZFtZXmTK
        0nKjEq1YckNIT7QwCKcMihmj2wFLnzV+cPVFBJBctSYktlPp2eq2lFr70LVawU1+EPnVyzbXTtBXtibi
        9TX5w7A9Cys6zVbDLeMQip3YNQmWwZSGTV6Cu7qrERUiTSTV7E4s1UftZSKsXpVgdD9SlK14rUek8GhM
        THq6PeX4tP8Aqu6ui0kHHjEgLEiOHP6t023+LT/qs6vhiljj1i0/d3//xAAUEQEAAAAAAAAAAAAAAAAA
        AACQ/9oACAEDAQE/ARx//8QAHREAAwACAwEBAAAAAAAAAAAAAAEREEAgIXASMf/aAAgBAgEBPwH2msup
        TsuWhPSbEuX5o0pSlPopSieg+CHwWg8dYQ8dYWjCEzCE9w//xABAEAACAQIDBAMMBwgDAAAAAAABAgME
        EQAFEhMhMUEQImEUICMyQlFxgaGxweEVQ1JygtHwBiQlNEBwkZNTYpL/2gAIAQEABj8C/vRtqajeul1B
        dknvxtJMhtF2aicCBgaWq5Rudzeg/wBI0NIBWVA4m/UX188beKJIYjvAdFX378Q02dZayiRgizwC4v0/
        S1GuzkQ3m0bvx+nGxnP79COt/wBx9rppKGlRZK2q1adfioq+Mx/LFO1eYKmgmkERnhQxtCx4XFzdcLl6
        UM9TM0RnGzZLaQbHiR58U70dHU1Rl13QaUMZQ2YNqPG5xSSJQVMVPVahHM+i26/Gx3cDisnaNqWOlkeK
        RpSOKeMd3LEdSMtqzQuRafq8CbBtF9VsS1tRqMcfkoLsfRhZEYMjDUGHMd8808ixRILs7HcMNS0JMFId
        1x48n5DswldmCXqOMcJ+r7T2+7vXjddSMNLKeYwdk1mibVGT5aH9WxFVwHqOOH2TzHRl2cQQvUpTq8M8
        MYu+hvKUc7EcMRZfRpKySTI00zxNGsSKwbyhx3WtilAlqaZO4nQzQL5RcHTqsRgRQqUgjux4sx5knmTi
        jikR4pI9QZJEKkdYnnj9oqKMNFNUVVQ0e0UpqBa68eRwi9x1Yrdymk2DXB9NrW7cRU0UmwipEMpZ4day
        O11tv3blv/6xLlc2tjQSGKOVkIEkXkke71d9LTDLIJ4opCB3T1t452xeGioIfNog+eONP/q+eOtFTP8A
        gI+OPCZfGfuyEfDHg6CJfvSE46sdMn4CfjjjT/6vngd0UdDU2/5Ib/HEFH9GQU6TyBb027eedv6BjGul
        Z0EpHbzxBmZZDBLIYwBxH6t0xQTrrgCl3F+IHzxU00QtCLMg7COmozMMgghcRkHif1fDSyDV3PHrX717
        fn0ZdLl8skdVGzy6VY2lCLq0Ec74jbLpTHLXQtIki8UQJqY/D0nFJVzM2gUqzOzMWPi3PHFTHXRCnr6e
        TTJEOSnrJ7D7DjOAtTSyNRSokVI0XhJ9QBsLNx3+bGTQxMscdXKySBkuRZC27f2WxLS/SFHRU4o+6Vaq
        jvdtVtPjDzYo8z0x0VRIYdokq6gusgHmPPfE/wDEaWvpwNIkgjtpf/JB3EY7pqnRpDLInUTSAFcr8O9p
        69BfY+Dk9B4e334mynNkZqGRtaSJxjbE0lNnLzTBbxxbPifNw6KqvYWD+Cj7fP8ADFLmCr1SNi57eI+P
        RDJU5y8ExHhItnwPm4YiyjKUcUSNreWTjI2JqxxY1J6n3R8+jLKiNIzT0+vXqezdYW3C2M2RHSVZVeGi
        jY2EMb7yOH2j7BjKsrmSFo49nHVgSHronIbudhhKvL4446SSHZVKmQ3Y36rAdm//ADjN522VNUTTJUUd
        QjXaJ1UAX3c7e3GR1LxU6vSSGScLKbb1K9Xd23w+YRU9LPD3IKYLPKR5Wq/inEWWQtDNKKgTNqJSNfCa
        9K8d3LDtJSUtNAUJKwyai77rX6o5DHcMcdIrbVn2+3JsGk1Hdo8x714pVDxuLMp4EYLUVYYVP1cq6rev
        H85TW9DYDVtYZlH1cS6b+vCQwoI4kFlVeAw8E8YlhcWZW54LUdaY1+xMuq3rx/OU9vQ2FetqjUKPqo10
        g+vCoihUUWCjl/e//8QAKRABAAIBAwMDAwUBAAAAAAAAAREhADFBYRBRgXGRsSAw8EBwocHh0f/aAAgB
        AQABPyH96FEPhbJ3U0YpjNsAHifjGwvdPknin9JVFYIv2dzg98C0tYpwZSchCiYJBR8M8dIyu1B1LoRo
        HV87YDFPgcH98+vVcFKdjph2hIA1XUtx7QuQ4bmjUyJO+PD6SIHcwisgvjAGIkChF5JaCBTKQKyqrIEv
        Q5uCaRq4QIWMMKQiuMxMXGGTHaorEDf/AIOB6foiEifVV0IIMdnE2j8zk79sC28F12B8flpkdShP6AhC
        YONNfWiHuJK9M33CbLuHI9J9zLmPkASLTTGD0+gFhLgB3lgMDFI6kCSJIL3rAyAhVFkrQq4Am1h9oDZM
        itZHSRQ0NecVKup3oPa9bxBiFUyxACiklezO4Pz/AFkhgZxp9UFwAVlTRg33wLA2dhizIaq+fhYIs/zJ
        WBWn5EBjlH2PlYsyFSOQTUxbJokSIlG9t/sR9gRxaaTUXlJ845QSmYm33dWujeiBRJyMZ4xJmCMTxZ46
        qCGZmYs9maB9boKB8dBEih7VhYoizF9zcj6vogHEcnc/85LypXXOxV25k9o9cHzROhl6TZEWlmuQbpPS
        xQh9TXO6ZvAXWbqvDZQhnKtCO5tDiSAUy66MESMGmUEQFu628/Sq+Rg2a3imNZLA++781zTOLlxqG0qe
        9dFXwmdgy/eHhyYlFRoG31keOk5cvlQt73mhKXnff3fFVkT9SXPflPt0nTbbp3YmNdTE9ptdL3R5ayCC
        MAgHLmjMVJvjHxQ6JMDdFunDE0St6ZrrULpGS8iSDynyR25x2fSjM0wquIyPSTYlNCjpPPGJ8wLPhKoE
        N9eMHr8K5iDWRDXX6Uo4LlGo4uwpIL0BGPXPlD/DFWRLC+pK+0YcnBUBkF6RUMc0Gv4oT+TDUH3f4YrM
        JfIklj0jAYINgBoB+9//2gAMAwEAAgADAAAAEJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJBF2JJJJJ
        JJJIL6I/IJAIAJJINwJIFBABBJJIDFiclQIAAAJJBl+F+kIABIIJJGB/eAZBIBJAJIHHE4xJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ
        JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ//xAAcEQADAAIDAQAAAAAAAAAAAAAAAREgQBAhcDH/2gAIAQMB
        AT8Q9qupTvBi0qJZfNGlKUpSlKXQeCxWg+OuEPBaMITmEJ7h/8QAHxEAAwABBAMBAAAAAAAAAAAAAAER
        ECFAQVExYXAg/9oACAECAQE/EPtDcPQJHtGq8FcpaPPMimx8FNEQ1f6eoTquwfqWWXmsss4JsFjJpcpW
        JHmaUWvYLyJqRjXbC8i84S7DakQul2L6li74ao+pYu/3D//EACUQAQEAAgIBAwQDAQAAAAAAAAERACEx
        UUEQYXEggZGxQHDRwf/aAAgBAQABPxD+5r6NbCKAqyTQWC7OCpJyZ+QSrR8ubSJAmnIIAR3OgY4N/hLM
        f9bNHqLYeeHhDrN4LAy2UrE4WXGq5aBuQslgDdYbyfBMtZu5jHEaKHInJKEMZcPAXdgTiHQPULKmQh5O
        GAnIAal5k6CIFlEKDOS8sLZ9C9rR5zWue0TJoCGopTeGZ0nGpF4JhT3MqqPnhJEKthTcmLoPr7BAlYiX
        RByUwKABCErau9I4Mb0qtNIeRET5+plKiBHlX8ByrDeJUg8pZGbTgHJtvBY4Dk+eCenDAAZHqMbUKoQd
        Ip98BWOYof6QK8hl5lZguo+we+k0npKOpqTOQkUI0pm467UOReDqK2DE56bqLNcvBOxguC1tOUUsLVX4
        McoS6AhY24TW8f3284OZOIEBXrHZY0BCb7qw3YVhhlGoB1bG4UTmmQvusppFSA2uSIv0OjF1faGtYJ4b
        IPOJpySKzhGI4pUDqsCHyYRfv/xw4dmCft+xibrjH+37WKXvzD74gUodKw172SFWCqF6xqFYR+LI4B5Q
        8yYcYzIGQe8mSZMjJk+l2YAYE4C98Fe6xQRTXF2SLGN0d+ujRC5BEEEbEZceyvuWaVaaLfUYQsqfjIg3
        rdvWFpCgUMv3Cj3j4wIYNUuqeoLSo1Dzgz4FnldhHseDTFcqzBFYpYrygeDEHToQMNV2y+dY4wzd7NbY
        5xEpYaD/AMv6yEKNUHI4jBczEEqbB8F3gOsIEg/vGEnK6e4TjlDSNLTBCI0edcQWG+SXUXbpgIV+iylY
        LGV6A/Bk3G5awoAYpCGKEFF9sO/JOgeHg58RyL8JTTb25HfVjKF9CYX4PkA8+g+em38h2BwDbnXBBywG
        tRCDLsgqABsySTsWQPsydgfPomIEgJIFGq0sO8AdnQAgmk4LPdwnebUqrCBTSbrWcjl46MjdI2IHIzld
        ESDC2SWYoKjxVtOibO48RtcSayrUCHpmst8YlrmIuo9Crg2mK2K51WiyWJR4GIMnAn9QCekYdGsOPoDq
        1MJAPImKqIm9qodIX3cdD80fj/WVxED7KIdwvcwME3Q+AMTRi8/cEYiREERMRCZ1R0OJ8j2uaropn8f6
        wMzkcfhkryUe8K9oE1ANAAAH93//2Q==
</value>
  </data>
</root>